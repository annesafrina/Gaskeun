plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.sonarqube' version '3.3'
}

apply plugin: "jacoco"
group = 'com.mpp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.sonarsource.scanner.api:sonar-scanner-api:2.16.2.588'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
    useJUnitPlatform()
}

def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"

jar {
    manifest {
        attributes(
                'Main-Class': 'com.mpp.gaskeun.GaskeunApplication'
        )
    }
}

jacocoTestReport {

    reports {
        xml.enabled true
    }

}

plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}

sonarqube {
    properties {
        property "sonar.projectName", "advprog-project-minterm"
        property "sonar.projectKey", "advprog-project-minterm"
        property "sonar.jacoco.reportPaths", allTestCoverageFile
        property "sonar.host.url", "https://sonarqube.cs.ui.ac.id"
        property("sonar.coverage.exclusions",
                [
                        "**/*Application**'"
                ])

    }
}